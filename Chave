package testePOOtp1;

import java.io.File;
import java.util.InputMismatchException;
import java.util.Scanner;

public class Chave {

	public static final int MAX_BOLAS = 50;
	public static final int NUM_BOLAS = 5;
	public static final int NUM_ESTRELAS = 2;
	public static final int MAX_ESTRELAS = 12;
	private int ano = 0;
	private int semana = 0;
	private int[] bolas = new int [NUM_BOLAS];
	private int[] estrela = new int [NUM_ESTRELAS];


	public Chave() {
		ano=2020;
		semana=1;
		for (int i=0; i<bolas.length; i++)
			bolas[i]=i+1;
		estrela[0]=1;
		estrela[1]=2;
	}
	
	public Chave (Scanner sc, int[][] chaves, int[] bolas, int[] estrelas) {
		String linha, filename;
		boolean ficheiroAberto;
		Scanner leitor=null;
		do{
			ficheiroAberto=true;
			System.out.println("Introduza o nome do ficheiro:");
		
			filename=sc.nextLine();
			File file=new File(filename);
			leitor=null;
			try {
				leitor = new Scanner(file);
			} catch (Exception e) {
				System.out.println("Ficheiro não encontrado");
				ficheiroAberto=false;
			}
		}while(!ficheiroAberto);
		int i=0;
		while(leitor.hasNextLine()){
			linha=leitor.nextLine();
			Scanner lerLinha=new Scanner(linha);
			chaves[i][ano] = lerLinha.nextInt();
			chaves[i][semana] = lerLinha.nextInt();
			bolas[0] = lerLinha.nextInt();
			bolas[1] = lerLinha.nextInt();
			bolas[2] = lerLinha.nextInt();
			bolas[3] = lerLinha.nextInt();
			bolas[4] = lerLinha.nextInt();
			estrelas[0] = lerLinha.nextInt();
			estrelas[1] = lerLinha.nextInt();
			lerLinha.close();
			i++;
		}
		leitor.close();
		return;
	}
	
	public Chave (Scanner sc, int[][] chaves, int numChavesLidas) {
	    int n = 0;
	    for (int i = 0; i < numChavesLidas; i++) {
	    	System.out.println(chaves[i].toString());
	        n++;
	        if (n == 20) {
	            System.out.println("\n\n=> Pressione a tecla ENTER para continuar...\n");
	            sc.nextLine();
	            n = 0;
	        }
	    }
	}

	public Chave (Chave[] chaves, int numChavesLidas, int[] freqAbsBolas, int[] freqAbsEstrelas) {
		for(int i=0;i<NUM_BOLAS;i++)freqAbsBolas[i]=0;
		for(int i=0;i<NUM_ESTRELAS;i++)freqAbsEstrelas[i]=0;
		for(int i=0;i<numChavesLidas;i++) {
			for (int j=0; j<bolas.length; j++);
			freqAbsBolas[bolas.length]++;
			int estrela1=estrela[0];
			int estrela2=estrela[1];
			freqAbsEstrelas[estrela1-1]++;
			freqAbsEstrelas[estrela2-1]++;
	        }
	    }
	
	public Chave (int[] freqAbsBolas, int[] freqAbsEstrelas) {
		for(int i=0;i<NUM_BOLAS;i++) {
			System.out.printf(" Bola[%02d]=%d",i+1,freqAbsBolas[i]);
			if((i+1)%10==0)System.out.println();
		}
		System.out.println();
		for(int i=0;i<NUM_ESTRELAS;i++) {
			System.out.printf(" Estrela[%02d]=%d",i+1,freqAbsEstrelas[i]);
			if((i+1)%6==0)System.out.println();
		}
	}
	

	public Chave(int an, int sem, int bol[], int est[]) throws RuntimeException {
		ano=an;
		semana=sem;
		try {
			for (int i=0; i<bolas.length; i++)
			bolas[i]=bol[i];
			estrela[0]=est[0];
			estrela[1]=est[1];
		}catch (Exception e) {
			throw new RuntimeException("ERRO: Numero incorreto de bolas ou estrelas");
		}

	}
	
	public Chave (Scanner sc, Chave[] chaves, int numChavesLidas) {
		System.out.println("introduza o ano:");
		int an=sc.nextInt();
		System.out.println("introduza a semana:");
		int sem=sc.nextInt();
		boolean encontrou=false;
		for(int i=0;i<numChavesLidas;i++) {
			if(chaves[i].getAno() == an && chaves[i].getSemana() == sem) {
				System.out.println(chaves[i].toString());
				encontrou=true;
			}
		}
		if(!encontrou)System.out.println("Erro: chave inexistente!");
	}

	private int getSemana() {
		return semana;
	}

	private int getAno() {
		return ano;
	}

	public Chave(String linha)
	{
		//2022 21 2 4 10 30 36 2 7
		Scanner lerLinha = new Scanner(linha);
		try {
		    ano = lerLinha.nextInt();
		} catch (InputMismatchException e) {
		    throw new RuntimeException("tipo de dados invalido no ano");
		}
		if (ano < 1980 || ano > 2023) {
		    throw new RuntimeException("ano invalido");
		}

		try {
		    semana = lerLinha.nextInt();
		} catch (InputMismatchException e) {
		    throw new RuntimeException("tipo de dados invalido na semana");
		}

		for (int i = 0; i < bolas.length; i++) {
		    try {
		        bolas[i] = lerLinha.nextInt();
		    } catch (InputMismatchException e) {
		        throw new RuntimeException("tipo de dados invalido nas bolas");
		    }
		    if (bolas[i] < 1 || bolas[i] > 50) {
		        throw new RuntimeException("bola fora do intervalo valido");
		    }
		}

		try {
		    estrela[0] = lerLinha.nextInt();
		} catch (InputMismatchException e) {
		    throw new RuntimeException("tipo de dados invalido nas estrelas");
		}
		if (estrela[0] < 1 || estrela[0] > 12) {
		    throw new RuntimeException("estrela fora do intervalo valido");
		}

		try {
		    estrela[1] = lerLinha.nextInt();
		} catch (InputMismatchException e) {
		    throw new RuntimeException("tipo de dados invalido nas estrelas");
		}
		if (estrela[1] < 1 || estrela[1] > 12) {
		    throw new RuntimeException("estrela fora do intervalo valido");
		}

		lerLinha.close();
	}
	
	  public static void menuPrincipal(Scanner ler, int[][] chaves, int numChavesLidas) {
		  int opcao = 0;
		    do {
		        System.out.println("\nMenu Principal");
		        System.out.println("1 - Ler Ficheiro");
		        System.out.println("2 - Listar Chaves");
		        System.out.println("3 - Apresentar Estatísticas");
		        System.out.println("4 - Consulta Chave");
		        System.out.println("0 - Sair");

		        System.out.print("\nOpção [0-4]: ");
		        opcao = ler.nextInt();
		        ler.nextLine();

		        switch (opcao) {
		            case 1:
		            	Chave chave = new Chave(ler, chaves, freqAbsBolas, freqAbsEstrelas);
		                numChavesLidas = chave.getNumChavesLidas();
		                break;
		            case 2:
		                listarChaves(ler, chaves, numChavesLidas);
		                break;
		            case 3:
		                estatisticas(chaves, numChavesLidas);
		                break;
		            case 4:
		                consultaChave(ler, chaves, numChavesLidas);
		                break;
		            case 0:
		                System.out.println("Programa terminado.");
		                break;
		            default:
		                System.out.println("Opção inválida.");
		                break;
		        }
		    } while (opcao != 0);
	    }
	
	private int getNumChavesLidas() {
		// TODO Auto-generated method stub
		return 0;
	}

	public String toString() {
		String tmp=String.format("{%d/%02d} |%02d|%02d|%02d|%02d|%02d| |%02d|%02d|",
				ano, semana, bolas[0],bolas[1],bolas[2],bolas[3],bolas[4],estrela[0],estrela[1]);
		return tmp;
	}


}
